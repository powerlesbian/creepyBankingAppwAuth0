{"ast":null,"code":"var _jsxFileName = \"/Users/daddysgirl/Desktop/Auth0-sample-01/src/components/LoginForm.js\";\nimport React, { createContext } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { withRouter } from 'react-router-dom';\nimport { UserContext } from 'react';\nimport { Card } from 'react-bootstrap';\nimport chineseceramic from '../images/chineseceramic.jpg';\n\nconst ErrorChecker = values => {\n  let errors = {}; // Email Validation\n\n  values.email = values.email.trim();\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  } // Password Validation\n\n\n  values.password = values.password.trim();\n\n  if (!values.password) {\n    errors.password = 'Required';\n  } else if (values.password.search(/[^a-zA-Z0-9-_@#$]/g) !== -1) {\n    errors.password = 'Only alphanumeric characters and _ - @ # $ are permitted';\n  } else if (values.password.length < 8) {\n    errors.password = \"Your password should be at least 8 characters\";\n  }\n\n  return errors;\n};\n\nconst FormLayout = ({\n  isSubmitting,\n  animationToggle\n}) => /*#__PURE__*/React.createElement(Card, {\n  style: {\n    width: '33rem'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Card.Img, {\n  variant: \"top\",\n  src: chineseceramic,\n  alt: \"empress vase\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(Card.Body, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(Card.Title, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 1\n  }\n}, \" Log in here if you already have an account with us \"), /*#__PURE__*/React.createElement(\"pre\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 78\n  }\n}), /*#__PURE__*/React.createElement(Form, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"label\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 6\n  }\n}, \"User name\"), /*#__PURE__*/React.createElement(\"pre\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 30\n  }\n}), /*#__PURE__*/React.createElement(Field, {\n  label: \"username\",\n  type: \"username\",\n  className: `${animationToggle} fadeIn-second`,\n  name: \"username\",\n  placeholder: \"ChineseHacker\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 55\n  }\n}), /*#__PURE__*/React.createElement(ErrorMessage, {\n  name: \"name\",\n  component: \"div\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(\"label\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }\n}, \"Email\"), /*#__PURE__*/React.createElement(\"pre\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 27\n  }\n}), /*#__PURE__*/React.createElement(Field, {\n  type: \"email\",\n  className: `${animationToggle} fadeIn-second`,\n  name: \"email\",\n  placeholder: \"crazygirl@fictious.io\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 60\n  }\n}), /*#__PURE__*/React.createElement(ErrorMessage, {\n  name: \"email\",\n  component: \"div\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(\"label\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }\n}, \"Password\"), /*#__PURE__*/React.createElement(\"pre\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 30\n  }\n}), /*#__PURE__*/React.createElement(Field, {\n  type: \"password\",\n  className: `${animationToggle} fadeIn-second`,\n  name: \"password\",\n  placeholder: \"Password\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(ErrorMessage, {\n  name: \"password\",\n  component: \"div\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 12\n  }\n}), /*#__PURE__*/React.createElement(\"button\", {\n  type: \"submit\",\n  className: `button button-large ${animationToggle} fadeIn-third`,\n  disabled: ErrorMessage(),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }\n}, \"Login\"))), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"formFooter\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"a\", {\n  className: \"underlineHover\",\n  href: \"#/createaccount/\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }\n}, \"Create a new account\")));\n\nconst LoginForm = props => {\n  const animationToggle = props.inView ? 'fadeIn' : 'hidden';\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validate: ErrorChecker,\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      UserContext(values, setSubmitting, props.history);\n    },\n    render: props => /*#__PURE__*/React.createElement(FormLayout, Object.assign({\n      animationToggle: animationToggle\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 22\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 3\n    }\n  });\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/daddysgirl/Desktop/Auth0-sample-01/src/components/LoginForm.js"],"names":["React","createContext","Formik","Form","Field","ErrorMessage","withRouter","UserContext","Card","chineseceramic","ErrorChecker","values","errors","email","trim","test","password","search","length","FormLayout","isSubmitting","animationToggle","width","LoginForm","props","inView","setSubmitting","history"],"mappings":"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","sourcesContent":["import React, { createContext } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { withRouter } from 'react-router-dom';\nimport { UserContext } from 'react';\nimport {Card } from 'react-bootstrap';\nimport chineseceramic from '../images/chineseceramic.jpg';\n\nconst ErrorChecker = (values) => {\n  let errors = {};\n\n  // Email Validation\n  values.email = values.email.trim();\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  // Password Validation\n  values.password = values.password.trim();\n  if(!values.password) {\n    errors.password = 'Required';\n  } else if(values.password.search(/[^a-zA-Z0-9-_@#$]/g) !== -1) {\n    errors.password = 'Only alphanumeric characters and _ - @ # $ are permitted';\n  } else if(values.password.length < 8) {\n    errors.password = \"Your password should be at least 8 characters\";\n  }\n\n  return errors;\n}\n\nconst FormLayout = ({ isSubmitting, animationToggle }) => (\n\n  <Card style={{ width: '33rem' }}>\n      <Card.Img variant=\"top\" src={chineseceramic} alt=\"empress vase\"/>\n\n<Card.Body>\n<Card.Title> Log in here if you already have an account with us </Card.Title><pre></pre>\n    <Form>\n     <label>User name</label><pre/>\n    <Field label=\"username\" type=\"username\" className={`${animationToggle} fadeIn-second`}\n        name=\"username\" placeholder=\"ChineseHacker\" /><br/>\n      <ErrorMessage name=\"name\" component=\"div\" />\n      <br/>\n      <label>Email</label><pre/>\n      <Field type=\"email\" className={`${animationToggle} fadeIn-second`}\n        name=\"email\" placeholder=\"crazygirl@fictious.io\" /><br/>\n      <ErrorMessage name=\"email\" component=\"div\" />\n      <br/>\n      <label>Password</label><pre/>\n      <Field type=\"password\" className={`${animationToggle} fadeIn-second`} \n        name=\"password\" placeholder=\"Password\" />\n      <ErrorMessage name=\"password\" component=\"div\" />\n      <br/><br/>\n      <button type=\"submit\" className={`button button-large ${animationToggle} fadeIn-third`} \n        disabled= {ErrorMessage()}>\n          Login\n      </button>\n    </Form>\n    </Card.Body>\n    <div className=\"formFooter\">\n      <a className=\"underlineHover\" href=\"#/createaccount/\">Create a new account</a>\n    </div>\n    </Card>       \n)\n\nconst LoginForm = (props) => {\n  const animationToggle = props.inView ? 'fadeIn' : 'hidden';\n  return (\n  <Formik\n    initialValues={{ email: '', password: '' }}\n    validate={ErrorChecker}\n    onSubmit={(values, { setSubmitting }) => {\n      UserContext(values, setSubmitting, props.history);\n    }}\n    render={props => <FormLayout animationToggle={animationToggle} {...props} />}\n  />\n)};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}