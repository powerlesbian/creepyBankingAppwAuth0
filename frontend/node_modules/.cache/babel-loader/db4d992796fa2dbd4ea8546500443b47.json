{"ast":null,"code":"import _slicedToArray from\"/Users/daddysgirl/Desktop/creepyBankingAppwAuth0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";//Latest Good Stuff but not finished cleared input box after submit!  Good!\nimport React,{useContext,useState}from'react';import macaron from'../images/macaron.JPG';import{Card,Button,Form}from'react-bootstrap';import context from'react-bootstrap/esm/AccordionContext';// import { BalanceContext} from './balance';\nimport{UserContext}from'../App';var Withdraw=function Withdraw(){var context=useContext(UserContext);var _useState=useState(0),_useState2=_slicedToArray(_useState,2),withdrawAmount=_useState2[0],setWithdrawAmount=_useState2[1];var _useState3=useState(context.users[0].balance),_useState4=_slicedToArray(_useState3,2),wbalance=_useState4[0],setNewBalance=_useState4[1];console.log(\"Account Rendered: \".concat(wbalance));//setNewBalance should trigger success alert\n//const balance = initialState;\nvar handleChange=function handleChange(event){console.log(\"handleChange \".concat(event.target.value));setWithdrawAmount(Number(event.target.value));event.preventDefault();};function UpdateBalance(){if(wbalance>=withdrawAmount){var newTotal=wbalance-withdrawAmount;setNewBalance(newTotal);setWithdrawAmount('');alert(\"Congrats! You've just withdrew $ \".concat(withdrawAmount,\". Spend it wisely. Your balance will be updated.\"));// context.users[0].balance = wbalance; \ncontext.users.unshift({name:'current user',email:'n/a',password:'n/a',balance:newTotal});}if(wbalance<withdrawAmount){alert(\"Your requested withdraw of \".concat(withdrawAmount,\" is rejected as overdrafts are not allowed. Please amend and try again.\"));}// useContext(newTotal);\n//how to get newTotal to useState and useContext?\n}return/*#__PURE__*/React.createElement(Card,{style:{width:'33rem'}},/*#__PURE__*/React.createElement(Card.Img,{variant:\"top\",src:macaron,alt:\"tasty food\"}),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,{id:\"total\"},\"Account Balance Fiat $\",wbalance,\" \"),/*#__PURE__*/React.createElement(\"pre\",null),/*#__PURE__*/React.createElement(Form,{onChange:handleChange},/*#__PURE__*/React.createElement(\"label\",{className:\"label huge\"},\"Withdraw: \\xA0\\xA0\\xA0\",/*#__PURE__*/React.createElement(\"input\",{id:\"WithdrawAmount\",type:\"number\",width:\"15%\",min:\"1\",placeholder:\"Positive num only\",value:withdrawAmount}),\"\\xA0\",/*#__PURE__*/React.createElement(Button,{variant:\"outline-secondary\",size:\"sm\",type:\"button\",onClick:UpdateBalance},\"Withdraw now\")))));};export default Withdraw;","map":{"version":3,"sources":["/Users/daddysgirl/Desktop/creepyBankingAppwAuth0/src/components/withdraw03.js"],"names":["React","useContext","useState","macaron","Card","Button","Form","context","UserContext","Withdraw","withdrawAmount","setWithdrawAmount","users","balance","wbalance","setNewBalance","console","log","handleChange","event","target","value","Number","preventDefault","UpdateBalance","newTotal","alert","unshift","name","email","password","width"],"mappings":"uKAAA;AAEA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,OAAQC,IAAR,CAAcC,MAAd,CAAsBC,IAAtB,KAAkC,iBAAlC,CACA,MAAOC,CAAAA,OAAP,KAAoB,sCAApB,CACA;AACA,OAASC,WAAT,KAA4B,QAA5B,CAIE,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,GAAMF,CAAAA,OAAO,CAAGN,UAAU,CAACO,WAAD,CAA1B,CADqB,cAEuBN,QAAQ,CAAC,CAAD,CAF/B,wCAEdQ,cAFc,eAEEC,iBAFF,8BAGaT,QAAQ,CAACK,OAAO,CAACK,KAAR,CAAc,CAAd,EAAiBC,OAAlB,CAHrB,yCAGdC,QAHc,eAGJC,aAHI,eAKzBC,OAAO,CAACC,GAAR,6BAAiCH,QAAjC,GACA;AACA;AAGI,GAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,KAAK,CAAI,CAC9BH,OAAO,CAACC,GAAR,wBAA4BE,KAAK,CAACC,MAAN,CAAaC,KAAzC,GACAV,iBAAiB,CAACW,MAAM,CAACH,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP,CAAjB,CACAF,KAAK,CAACI,cAAN,GACD,CAJC,CAOF,QAASC,CAAAA,aAAT,EAAyB,CACvB,GAAIV,QAAQ,EAAIJ,cAAhB,CAAgC,CAChC,GAAIe,CAAAA,QAAQ,CAAGX,QAAQ,CAAGJ,cAA1B,CACAK,aAAa,CAACU,QAAD,CAAb,CACAd,iBAAiB,CAAC,EAAD,CAAjB,CACAe,KAAK,4CAAqChB,cAArC,qDAAL,CACA;AACAH,OAAO,CAACK,KAAR,CAAce,OAAd,CAAsB,CAAEC,IAAI,CAAC,cAAP,CAAuBC,KAAK,CAAC,KAA7B,CAAoCC,QAAQ,CAAC,KAA7C,CAAoDjB,OAAO,CAAEY,QAA7D,CAAtB,EAED,CAEC,GAAIX,QAAQ,CAAGJ,cAAf,CAA8B,CAC5BgB,KAAK,sCAAgChB,cAAhC,4EAAL,CACD,CACD;AACA;AACD,CAEG,mBAGJ,oBAAC,IAAD,EAAM,KAAK,CAAE,CAAEqB,KAAK,CAAE,OAAT,CAAb,eACA,oBAAC,IAAD,CAAM,GAAN,EAAU,OAAO,CAAC,KAAlB,CAAwB,GAAG,CAAE5B,OAA7B,CAAsC,GAAG,CAAC,YAA1C,EADA,cAGF,oBAAC,IAAD,CAAM,IAAN,mBACA,oBAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAG,OAAjB,2BAAgDW,QAAhD,KADA,cACuE,+BADvE,cAEA,oBAAC,IAAD,EAAM,QAAQ,CAAEI,YAAhB,eAEA,6BAAO,SAAS,CAAC,YAAjB,wCAEM,6BAAO,EAAE,CAAE,gBAAX,CAA4B,IAAI,CAAC,QAAjC,CAA0C,KAAK,CAAC,KAAhD,CAAsD,GAAG,CAAC,GAA1D,CAA8D,WAAW,CAAC,mBAA1E,CAA8F,KAAK,CAAER,cAArG,EAFN,qBAGY,oBAAC,MAAD,EAAS,OAAO,CAAC,mBAAjB,CAAqC,IAAI,CAAC,IAA1C,CAA+C,IAAI,CAAC,QAApD,CAA8D,OAAO,CAAEc,aAAvE,iBAHZ,CAFA,CAFA,CAHE,CAHI,CAsBH,CAzDD,CA2DF,cAAef,CAAAA,QAAf","sourcesContent":["//Latest Good Stuff but not finished cleared input box after submit!  Good!\n\nimport React, { useContext, useState} from 'react';\nimport macaron from '../images/macaron.JPG';\nimport {Card, Button, Form}  from 'react-bootstrap';\nimport context from 'react-bootstrap/esm/AccordionContext';\n// import { BalanceContext} from './balance';\nimport { UserContext } from '../App';\n\n\n\n  const Withdraw = () => {\n    const context = useContext(UserContext);\n    const [withdrawAmount, setWithdrawAmount] = useState(0);\n    const [wbalance, setNewBalance] = useState(context.users[0].balance);\n\nconsole.log(`Account Rendered: ${wbalance}`);\n//setNewBalance should trigger success alert\n//const balance = initialState;\n\n\n    const handleChange = event => {\n    console.log(`handleChange ${event.target.value}`);\n    setWithdrawAmount(Number(event.target.value));\n    event.preventDefault();\n  };\n \n\n  function UpdateBalance() {\n    if (wbalance >= withdrawAmount) {\n    let newTotal = wbalance - withdrawAmount\n    setNewBalance(newTotal);\n    setWithdrawAmount('');\n    alert(`Congrats! You've just withdrew $ ${withdrawAmount}. Spend it wisely. Your balance will be updated.`)\n    // context.users[0].balance = wbalance; \n    context.users.unshift({ name:'current user', email:'n/a', password:'n/a', balance: newTotal});\n  \n  }\n\n    if (wbalance < withdrawAmount){\n      alert (`Your requested withdraw of ${withdrawAmount} is rejected as overdrafts are not allowed. Please amend and try again.`)\n    }\n    // useContext(newTotal);\n    //how to get newTotal to useState and useContext?\n  }\n\n      return (\n\n\n  <Card style={{ width: '33rem' }}>\n  <Card.Img variant=\"top\" src={macaron} alt=\"tasty food\"/>\n\n<Card.Body>\n<Card.Title id = \"total\">Account Balance Fiat ${wbalance} </Card.Title><pre></pre>\n<Form onChange={handleChange} >\n\n<label className=\"label huge\">\n      Withdraw: &nbsp;&nbsp;&nbsp;\n      <input id= \"WithdrawAmount\" type=\"number\" width=\"15%\" min=\"1\" placeholder=\"Positive num only\" value={withdrawAmount}></input>\n      &nbsp;<Button  variant=\"outline-secondary\" size=\"sm\" type=\"button\"  onClick={UpdateBalance}>Withdraw now</Button>\n    </label>\n\n</Form>\n</Card.Body>\n\n</Card>   \n\n      );\n  }\n\nexport default Withdraw;\n"]},"metadata":{},"sourceType":"module"}