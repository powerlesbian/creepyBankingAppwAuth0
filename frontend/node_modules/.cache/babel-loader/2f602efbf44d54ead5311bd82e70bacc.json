{"ast":null,"code":"var _jsxFileName = \"/Users/daddysgirl/Desktop/creepyBankingAppwAuth0/frontend/src/components/withdraw03.js\";\n//Latest Good Stuff but not finished cleared input box after submit!  Good!\nimport React, { useContext, useState } from 'react';\nimport macaron from '../images/macaron.JPG';\nimport { Card, Button, Form } from 'react-bootstrap';\nimport context from 'react-bootstrap/esm/AccordionContext'; // import { BalanceContext} from './balance';\n\nimport { UserContext } from '../App';\n\nconst Withdraw = () => {\n  const context = useContext(UserContext);\n  const [withdrawAmount, setWithdrawAmount] = useState(0);\n  const [wbalance, setNewBalance] = useState(context.users[0].balance);\n  console.log(`Account Rendered: ${wbalance}`); //setNewBalance should trigger success alert\n  //const balance = initialState;\n\n  const handleChange = event => {\n    console.log(`handleChange ${event.target.value}`);\n    setWithdrawAmount(Number(event.target.value));\n    event.preventDefault();\n  };\n\n  function UpdateBalance() {\n    if (wbalance >= withdrawAmount) {\n      let newTotal = wbalance - withdrawAmount;\n      setNewBalance(newTotal);\n      setWithdrawAmount('');\n      alert(`Congrats! You've just withdrew $ ${withdrawAmount}. Spend it wisely. Your balance will be updated.`); // context.users[0].balance = wbalance; \n\n      context.users.unshift({\n        name: 'current user',\n        email: 'n/a',\n        password: 'n/a',\n        balance: newTotal\n      });\n    }\n\n    if (wbalance < withdrawAmount) {\n      alert(`Your requested withdraw of ${withdrawAmount} is rejected as overdrafts are not allowed. Please amend and try again.`);\n    } // useContext(newTotal);\n    //how to get newTotal to useState and useContext?\n\n  }\n\n  return /*#__PURE__*/React.createElement(Card, {\n    style: {\n      width: '33rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Card.Img, {\n    variant: \"top\",\n    src: macaron,\n    alt: \"tasty food\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    id: \"total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 1\n    }\n  }, \"Account Balance Fiat $\", wbalance, \" \"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 72\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label huge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 1\n    }\n  }, \"Withdraw: \\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"WithdrawAmount\",\n    type: \"number\",\n    width: \"15%\",\n    min: \"1\",\n    placeholder: \"Positive num only\",\n    value: withdrawAmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), \"\\xA0\", /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-secondary\",\n    size: \"sm\",\n    type: \"button\",\n    onClick: UpdateBalance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Withdraw now\")))));\n};\n\nexport default Withdraw;","map":{"version":3,"sources":["/Users/daddysgirl/Desktop/creepyBankingAppwAuth0/frontend/src/components/withdraw03.js"],"names":["React","useContext","useState","macaron","Card","Button","Form","context","UserContext","Withdraw","withdrawAmount","setWithdrawAmount","wbalance","setNewBalance","users","balance","console","log","handleChange","event","target","value","Number","preventDefault","UpdateBalance","newTotal","alert","unshift","name","email","password","width"],"mappings":"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","sourcesContent":["//Latest Good Stuff but not finished cleared input box after submit!  Good!\n\nimport React, { useContext, useState} from 'react';\nimport macaron from '../images/macaron.JPG';\nimport {Card, Button, Form}  from 'react-bootstrap';\nimport context from 'react-bootstrap/esm/AccordionContext';\n// import { BalanceContext} from './balance';\nimport { UserContext } from '../App';\n\n\n\n  const Withdraw = () => {\n    const context = useContext(UserContext);\n    const [withdrawAmount, setWithdrawAmount] = useState(0);\n    const [wbalance, setNewBalance] = useState(context.users[0].balance);\n\nconsole.log(`Account Rendered: ${wbalance}`);\n//setNewBalance should trigger success alert\n//const balance = initialState;\n\n\n    const handleChange = event => {\n    console.log(`handleChange ${event.target.value}`);\n    setWithdrawAmount(Number(event.target.value));\n    event.preventDefault();\n  };\n \n\n  function UpdateBalance() {\n    if (wbalance >= withdrawAmount) {\n    let newTotal = wbalance - withdrawAmount\n    setNewBalance(newTotal);\n    setWithdrawAmount('');\n    alert(`Congrats! You've just withdrew $ ${withdrawAmount}. Spend it wisely. Your balance will be updated.`)\n    // context.users[0].balance = wbalance; \n    context.users.unshift({ name:'current user', email:'n/a', password:'n/a', balance: newTotal});\n  \n  }\n\n    if (wbalance < withdrawAmount){\n      alert (`Your requested withdraw of ${withdrawAmount} is rejected as overdrafts are not allowed. Please amend and try again.`)\n    }\n    // useContext(newTotal);\n    //how to get newTotal to useState and useContext?\n  }\n\n      return (\n\n\n  <Card style={{ width: '33rem' }}>\n  <Card.Img variant=\"top\" src={macaron} alt=\"tasty food\"/>\n\n<Card.Body>\n<Card.Title id = \"total\">Account Balance Fiat ${wbalance} </Card.Title><pre></pre>\n<Form onChange={handleChange} >\n\n<label className=\"label huge\">\n      Withdraw: &nbsp;&nbsp;&nbsp;\n      <input id= \"WithdrawAmount\" type=\"number\" width=\"15%\" min=\"1\" placeholder=\"Positive num only\" value={withdrawAmount}></input>\n      &nbsp;<Button  variant=\"outline-secondary\" size=\"sm\" type=\"button\"  onClick={UpdateBalance}>Withdraw now</Button>\n    </label>\n\n</Form>\n</Card.Body>\n\n</Card>   \n\n      );\n  }\n\nexport default Withdraw;\n"]},"metadata":{},"sourceType":"module"}