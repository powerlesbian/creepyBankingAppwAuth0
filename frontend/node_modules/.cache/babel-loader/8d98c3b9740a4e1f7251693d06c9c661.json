{"ast":null,"code":"var _jsxFileName = \"/Users/daddysgirl/Desktop/Auth0-sample-01/src/components/deposit02.js\";\n//Latest Good Stuff but not finished added clear form and success alert.\nimport React, { useContext, useState } from 'react';\nimport piggyWhiskyLand from '../images/piggyWhiskyLand.jpg';\nimport { Card, Button, Form } from 'react-bootstrap'; // import { BalanceContext} from './balance';\n\nimport { UserContext } from '../App'; //cut this below part to move to Deposit02\n//   if ((isDeposit === true) && newTotal >=70){\n//   alert(\"Success! You are building good saving habits, invest it wisely 🧐.\")};\n\nconst Deposit = () => {\n  const context = useContext(UserContext);\n  const [depositAmount, setDepositAmount] = useState(0);\n  const [wbalance, setNewBalance] = useState(context.users[0].balance); // const [submitted, setSubmitted] = useState(false);\n\n  console.log(`Account Rendered: ${wbalance}`); //setNewBalance should trigger success alert\n  //const balance = initialState;\n\n  const handleChange = event => {\n    console.log(`handleChange ${event.target.value}`);\n    setDepositAmount(Number(event.target.value));\n    event.preventDefault();\n  };\n\n  function UpdateBalance() {\n    let newTotal = wbalance + depositAmount;\n    setNewBalance(newTotal);\n    alert(`Congrats! You've just made a BIG FAT deposit of $ ${depositAmount}.✨ Your balance will be updated.`);\n    setDepositAmount(''); // context.users[0].balance.push =wbalance\n\n    context.users.unshift({\n      name: 'current user',\n      email: 'n/a',\n      password: 'n/a',\n      balance: newTotal\n    }); // BalanceContext=newTotal;\n    //how to get newTotal to useState and useContext?\n  }\n\n  return /*#__PURE__*/React.createElement(Card, {\n    style: {\n      width: '33rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Card.Img, {\n    variant: \"top\",\n    src: piggyWhiskyLand,\n    alt: \"tasty beverage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    id: \"total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 1\n    }\n  }, \"Account Balance Fiat $\", wbalance, \" \"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 72\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label huge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 1\n    }\n  }, \"Deposit: \\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"depositAmount\",\n    type: \"number\",\n    width: \"15%\",\n    min: \"1\",\n    placeholder: \"Positive num only\",\n    value: depositAmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), \"\\xA0\", /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-secondary\",\n    size: \"sm\",\n    type: \"button\",\n    onClick: UpdateBalance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Deposit now\")))));\n};\n\nexport default Deposit;","map":{"version":3,"sources":["/Users/daddysgirl/Desktop/Auth0-sample-01/src/components/deposit02.js"],"names":["React","useContext","useState","piggyWhiskyLand","Card","Button","Form","UserContext","Deposit","context","depositAmount","setDepositAmount","wbalance","setNewBalance","users","balance","console","log","handleChange","event","target","value","Number","preventDefault","UpdateBalance","newTotal","alert","unshift","name","email","password","width"],"mappings":"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","sourcesContent":["//Latest Good Stuff but not finished added clear form and success alert.\r\nimport React, { useContext, useState} from 'react';\r\nimport piggyWhiskyLand from '../images/piggyWhiskyLand.jpg';\r\nimport {Card, Button, Form}  from 'react-bootstrap';\r\n// import { BalanceContext} from './balance';\r\nimport { UserContext } from '../App';\r\n\r\n      //cut this below part to move to Deposit02\r\n    //   if ((isDeposit === true) && newTotal >=70){\r\n    //   alert(\"Success! You are building good saving habits, invest it wisely 🧐.\")};\r\n\r\n\r\n  const Deposit = () => {\r\n    const context = useContext(UserContext);\r\n    const [depositAmount, setDepositAmount] = useState(0);\r\n    const [wbalance, setNewBalance] = useState(context.users[0].balance);\r\n    // const [submitted, setSubmitted] = useState(false);\r\n\r\nconsole.log(`Account Rendered: ${wbalance}`);\r\n//setNewBalance should trigger success alert\r\n//const balance = initialState;\r\n\r\n\r\n    const handleChange = event => {\r\n    console.log(`handleChange ${event.target.value}`);\r\n    setDepositAmount(Number(event.target.value));\r\n    event.preventDefault();\r\n  };\r\n \r\n\r\n  function UpdateBalance() {\r\n    let newTotal = wbalance + depositAmount\r\n    setNewBalance(newTotal);\r\n    alert(`Congrats! You've just made a BIG FAT deposit of $ ${depositAmount}.✨ Your balance will be updated.`)\r\n    setDepositAmount('');\r\n    // context.users[0].balance.push =wbalance\r\n\r\n    context.users.unshift({ name:'current user', email:'n/a', password:'n/a', balance: newTotal});\r\n    // BalanceContext=newTotal;\r\n    //how to get newTotal to useState and useContext?\r\n  }\r\n\r\n      return (\r\n\r\n\r\n  <Card style={{ width: '33rem' }}>\r\n  <Card.Img variant=\"top\" src={piggyWhiskyLand} alt=\"tasty beverage\"/>\r\n\r\n<Card.Body>\r\n<Card.Title id = \"total\">Account Balance Fiat ${wbalance} </Card.Title><pre></pre>\r\n<Form onChange={handleChange} >\r\n\r\n<label className=\"label huge\">\r\n      Deposit: &nbsp;&nbsp;&nbsp;\r\n      <input id= \"depositAmount\" type=\"number\" width=\"15%\" min=\"1\" placeholder=\"Positive num only\" value={depositAmount}></input>\r\n      &nbsp;<Button  variant=\"outline-secondary\" size=\"sm\" type=\"button\"  onClick={UpdateBalance}>Deposit now</Button>\r\n    </label>\r\n\r\n</Form>\r\n</Card.Body>\r\n\r\n</Card>   \r\n\r\n      );\r\n  }\r\n\r\nexport default Deposit;\r\n"]},"metadata":{},"sourceType":"module"}