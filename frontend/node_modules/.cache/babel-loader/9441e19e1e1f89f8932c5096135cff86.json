{"ast":null,"code":"var _jsxFileName = \"/Users/daddysgirl/Desktop/creepyBankingAppwAuth0/frontend/src/components/alldata03-axios.js\";\n//Latest Good Stuff but really worked on this file yet\nimport React, { Component, useContext } from \"react\";\nimport axios from \"axios\"; // import { Table, Card } from \"react-bootstrap\";\n\nimport { Link } from \"react-router-dom\"; // import lamp from \"../images/lamp.jpg\";\n// import { UserContext } from \"../App\";\n\nconst Record = props => /*#__PURE__*/React.createElement(\"tr\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}, props.record.user_name), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}, props.record.user_email), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }\n}, props.record.user_password), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }\n}, props.record.user_balance), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Link, {\n  to: \"/edit/\" + props.record._id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }\n}, \"Edit\"), \" |\", /*#__PURE__*/React.createElement(\"a\", {\n  href: \"/\",\n  onClick: () => {\n    props.deleteRecord(props.record._id);\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }\n}, \"Delete\"))); // const AllData = () => {\n//   const context = useContext(UserContext);\n//   return (\n//     <>\n//     <Card style={{ width: '33rem' }}>\n//         <Card.Img variant=\"top\" src={lamp} />\n//         <Card.Body className=\"table-container\">\n//           <Table striped bordered hover variant=\"light\">\n//             <thead>\n//               <tr>\n//                 <th>Userame</th>\n//                 <th>Email</th>\n//                 <th>Password</th>\n//                 <th>Balance</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {context.users.map((item) => {\n//                 return (\n//                   <tr>\n//                     <td>{item.name}</td>\n//                     <td>{item.email}</td>\n//                     <td>{item.password}</td>\n//                     <td>{item.balance}</td>\n//                   </tr>\n//                 );\n//               })}\n//             </tbody>\n//           </Table>\n//         </Card.Body>\n//       </Card>\n//     </>\n//   );\n// };\n// export default AllData;\n\n\nexport default class RecordList extends Component {\n  // This is the constructor that shall store our data retrieved from the database\n  constructor(props) {\n    super(props);\n    this.deleteRecord = this.deleteRecord.bind(this);\n    this.state = {\n      records: []\n    };\n  } // This method will get the data from the database.\n\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5050/record/\").then(response => {\n      this.setState({\n        records: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  } // This method will delete a record based on the method\n\n\n  deleteRecord(id) {\n    axios.delete(\"http://localhost:5050/\" + id).then(response => {\n      console.log(response.data);\n    });\n    this.setState({\n      record: this.state.records.filter(el => el._id !== id)\n    });\n  } // This method will map out the users on the table\n\n\n  recordList() {\n    return this.state.records.map(currentrecord => {\n      return /*#__PURE__*/React.createElement(Record, {\n        record: currentrecord,\n        deleteRecord: this.deleteRecord,\n        key: currentrecord._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }\n      });\n    });\n  } // This following section will display the table with the records of customers.\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }, \"Record List\"), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-striped\",\n      style: {\n        marginTop: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, \"Balance\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, this.recordList())));\n  }\n\n}","map":{"version":3,"sources":["/Users/daddysgirl/Desktop/creepyBankingAppwAuth0/frontend/src/components/alldata03-axios.js"],"names":["React","Component","useContext","axios","Link","Record","props","record","user_name","user_email","user_password","user_balance","_id","deleteRecord","RecordList","constructor","bind","state","records","componentDidMount","get","then","response","setState","data","catch","error","console","log","id","delete","filter","el","recordList","map","currentrecord","render","marginTop"],"mappings":"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","sourcesContent":["//Latest Good Stuff but really worked on this file yet\r\nimport React, { Component, useContext } from \"react\";\r\nimport axios from \"axios\";\r\n// import { Table, Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n// import lamp from \"../images/lamp.jpg\";\r\n\r\n// import { UserContext } from \"../App\";\r\n\r\nconst Record = (props) => (\r\n  <tr>\r\n    <td>{props.record.user_name}</td>\r\n    <td>{props.record.user_email}</td>\r\n    <td>{props.record.user_password}</td>\r\n    <td>{props.record.user_balance}</td>\r\n    <td>\r\n      <Link to={\"/edit/\" + props.record._id}>Edit</Link> |\r\n      <a\r\n        href=\"/\"\r\n        onClick={() => {\r\n          props.deleteRecord(props.record._id);\r\n        }}\r\n      >\r\n        Delete\r\n      </a>\r\n    </td>\r\n  </tr>\r\n);\r\n\r\n\r\n// const AllData = () => {\r\n  \r\n//   const context = useContext(UserContext);\r\n\r\n//   return (\r\n//     <>\r\n//     <Card style={{ width: '33rem' }}>\r\n//         <Card.Img variant=\"top\" src={lamp} />\r\n//         <Card.Body className=\"table-container\">\r\n//           <Table striped bordered hover variant=\"light\">\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>Userame</th>\r\n//                 <th>Email</th>\r\n//                 <th>Password</th>\r\n//                 <th>Balance</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {context.users.map((item) => {\r\n//                 return (\r\n//                   <tr>\r\n//                     <td>{item.name}</td>\r\n//                     <td>{item.email}</td>\r\n//                     <td>{item.password}</td>\r\n//                     <td>{item.balance}</td>\r\n//                   </tr>\r\n//                 );\r\n//               })}\r\n//             </tbody>\r\n//           </Table>\r\n//         </Card.Body>\r\n//       </Card>\r\n\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default AllData;\r\n\r\n\r\n\r\nexport default class RecordList extends Component {\r\n    // This is the constructor that shall store our data retrieved from the database\r\n    constructor(props) {\r\n      super(props);\r\n      this.deleteRecord = this.deleteRecord.bind(this);\r\n      this.state = { records: [] };\r\n    }\r\n  \r\n    // This method will get the data from the database.\r\n    componentDidMount() {\r\n      axios\r\n        .get(\"http://localhost:5050/record/\")\r\n        .then((response) => {\r\n          this.setState({ records: response.data });\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    }\r\n  \r\n    // This method will delete a record based on the method\r\n    deleteRecord(id) {\r\n      axios.delete(\"http://localhost:5050/\" + id).then((response) => {\r\n        console.log(response.data);\r\n      });\r\n  \r\n      this.setState({\r\n        record: this.state.records.filter((el) => el._id !== id),\r\n      });\r\n    }\r\n  \r\n    // This method will map out the users on the table\r\n    recordList() {\r\n      return this.state.records.map((currentrecord) => {\r\n        return (\r\n          <Record\r\n            record={currentrecord}\r\n            deleteRecord={this.deleteRecord}\r\n            key={currentrecord._id}\r\n          />\r\n        );\r\n      });\r\n    }\r\n  \r\n    // This following section will display the table with the records of customers.\r\n    render() {\r\n      return (\r\n        <div>\r\n          <h3>Record List</h3>\r\n          <table className=\"table table-striped\" style={{ marginTop: 20 }}>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                <th>Password</th>\r\n                <th>Balance</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{this.recordList()}</tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}